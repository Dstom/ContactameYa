@model IEnumerable<ContactameYa.Models.conPDSpPedidoServicio>

@{
    ViewBag.Title = "Controlar Servicios";

    List<SelectListItem> lstEstados = new List<SelectListItem>();

    lstEstados.Add(new SelectListItem() { Text = "Pendiente", Value = "P" }); // no puede escogerlo
    lstEstados.Add(new SelectListItem() { Text = "Ejecucion", Value = "E" });
    lstEstados.Add(new SelectListItem() { Text = "Terminado", Value = "T" });
    //lstEstados.Add(new SelectListItem() { Text = "Cancelado", Value = "C" });
    lstEstados.Add(new SelectListItem() { Text = "Rechazado", Value = "R" });



}

<h2>Controlar Servicios</h2>

<table id="example" class="table table-striped table-bordered" style="width:100%">
    <thead>
        <tr>
            <th>
                Id del Pedido
            </th>
            <th>
                Nombre y Apellidos del Cliente
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PDSfecha_inicio)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PDSfecha_entrega)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PDSestado)
            </th>
        </tr>

    </thead>
  
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.PDSid_pedidoServicio)
                </td>
                <td>
                    @item.conUSUpUsuario.USUnombre @item.conUSUpUsuario.USUapellido
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PDSfecha_inicio)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PDSfecha_entrega)
                </td>
                <td>
                    @Html.HiddenFor(modelItem => item.PDSid_pedidoServicio, new { @class = "id_pedidoservicio" })
                    @Html.DropDownListFor(modelItem => item.PDSestado, new SelectList(lstEstados, "Value", "Text", item.PDSestado), new { @class = "form-control estados" })

                </td>

            </tr>
        }

    </tbody>
 

</table>

@section scripts {
    <script>

        $(document).ready(function () {
            var sestado = $(".estados");
            sestado.on("change", function () {

                var estadoa = $(this).val();
                var id_servicio = $(this).siblings('.id_pedidoservicio').val();
               
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("mtdActualizarEstado", "conClsPedidoServicio")',
                    data: { xGintIdPedidoServicio: id_servicio, xGstrEStado: estadoa },
                    dataType: "json",
                    success: function (data) {
                        console.log(data);
                        switch (data) {                          
                            case 'E':
                                toastr.info("Estado Actualizado", "Pedido en Ejecucion", { timeOut: 3000 });

                                //$(".estados").find('option:contains("Terminado")').attr('disabled', true);
                                //$(".estados").find('option:contains("Rechazado")').attr('disabled', true);


                                break;
                            case 'T':
                                toastr.success("Estado Actualizado", "Pedido Terminado", { timeOut: 3000 });

                                $(".estados").find('option:contains("Rechazado")').attr('disabled', true);
                                $(".estados").find('option:contains("Ejecucion")').attr('disabled', true);
                                break;                            
                            case 'R':
                                toastr.error("Estado Actualizado", "Pedido Rechazado", { timeOut: 3000 });
                                $(".estados").find('option:contains("Terminado")').attr('disabled', true);
                                $(".estados").find('option:contains("Ejecucion")').attr('disabled', true);
                                break;
                          
                        }
                    }
                });
            });

            $(".estados").find('option:contains("Pendiente")').attr('disabled', true);


        });
    </script>
}

